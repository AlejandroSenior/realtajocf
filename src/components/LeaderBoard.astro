---
import type { ClassificationResponse, Team } from '@/interfaces/Classification.ts';

let clasificacion: Team[] = [];

try {
  const response = await fetch('http://lianes8server.duckdns.org:8765/api/v1/classification', {
    method: 'GET',
    headers: { 'Content-Type': 'application/json' }
  });
  const data: ClassificationResponse = await response.json();
  clasificacion = data.teams;
} catch (error) {
  console.error('Error al obtener la clasificación:', error);
  // Datos de respaldo en caso de error
  clasificacion = [];
}
---

<div class="my-10 p-5 max-w-7xl mx-auto">
  <h2 class="text-center text-2xl font-bold text-secondary mb-5">Clasificación Liga 2025/26</h2>

  <table>
    <thead>
      <tr>
        <th>Pos</th>
        <th>Equipo</th>
        <th>J</th>
        <th>G</th>
        <th>E</th>
        <th>P</th>
        <th>GF</th>
        <th>GC</th>
        <th>Pts</th>
      </tr>
    </thead>
    <tbody>
      {
        clasificacion.map((equipo) => (
          <tr>
            <td class="text-center">{equipo.position}</td>
            <td>{equipo.team}</td>
            <td>{equipo.matches.played}</td>
            <td>{equipo.matches.wins}</td>
            <td>{equipo.matches.draws}</td>
            <td>{equipo.matches.losses}</td>
            <td>{equipo.goals.for}</td>
            <td>{equipo.goals.against}</td>
            <td class="font-bold">{equipo.points}</td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<style>
  table {
    width: 100%;
    border-collapse: collapse;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 15px;
    overflow: hidden;
  }

  th {
    background-color: color-mix(in srgb, var(--color-primary) 80%, transparent);
    color: white;
    padding: 12px 8px;
    text-align: center;
    font-weight: bold;
  }

  td {
    padding: 10px 8px;
    border-bottom: 1px solid #eee;
    text-align: center;
  }

  @media (max-width: 768px) {
    table {
      font-size: 0.9rem;
    }

    th,
    td {
      padding: 8px 4px;
    }
  }
</style>
